// ===== –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è =====
function getToken() {
    const token = localStorage.getItem('token');
    if (!token) {
        console.error('No token found');
        window.location.href = '/login.html';
        return null;
    }
    return token;
}

function decodeToken(token) {
    try {
        const payload = token.split('.')[1];
        return JSON.parse(atob(payload));
    } catch (e) {
        console.error('Token decode error:', e);
        return null;
    }
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ —Ç–æ–∫–µ–Ω
 */
export async function checkAuth(token) {
    try {
        console.log("üîê –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–∫–µ–Ω:", token);

        const decoded = decodeToken(token);
        if (!decoded) {
            console.warn('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–∫–µ–Ω');
            clearAuthData();
            window.location.href = '/login.html';
            return null;
        }

        console.log("üîì –î–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω:", decoded);

        const response = await fetch('/api/users/me', {
            headers: { 
                'Authorization': `Bearer ${token}`,
                'Cache-Control': 'no-cache'
            }
        });

        console.log(`üì° –û—Ç–≤–µ—Ç –æ—Ç /api/users/me: —Å—Ç–∞—Ç—É—Å ${response.status}`);

        if (response.status === 401) {
            console.warn('‚ùå –°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª 401 ‚Üí —Ç–æ–∫–µ–Ω –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –∏–ª–∏ –∏—Å—Ç—ë–∫');
            clearAuthData();
            window.location.href = '/login.html';
            return null;
        }

        if (response.status === 304 || response.ok) {
            let userData;
            try {
                userData = await response.json();
            } catch (e) {
                console.error("–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON", e);
                clearAuthData();
                window.location.href = '/login.html';
                return null;
            }

            // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ç–æ–∫–µ–Ω–∞ –∏ API
            if (decoded.id !== userData.id || decoded.email !== userData.email) {
                console.warn('‚ùå –î–∞–Ω–Ω—ã–µ —Ç–æ–∫–µ–Ω–∞ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç');
                clearAuthData();
                window.location.href = '/login.html';
                return null;
            }

            return userData;
        }

        throw new Error(`HTTP error! status: ${response.status}`);
    } catch (error) {
        console.error('üö´ –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', error.message);
        clearAuthData();
        window.location.href = '/login.html';
        return null;
    }
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
export async function checkRole(token, allowedRoles) {
    const userData = await checkAuth(token);
    return userData ? allowedRoles.includes(userData.role) : false;
}

/**
 * –û—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
 */
export function clearAuthData() {
    localStorage.removeItem('token');
    localStorage.removeItem('username');
    localStorage.removeItem('email');
    localStorage.removeItem('role');
    localStorage.removeItem('last_active');
}

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
 */
export async function initAuth() {
    const token = localStorage.getItem('token');
    if (!token) {
        redirectToLogin();
        return;
    }

    const userData = await checkAuth(token);
    if (!userData) {
        clearAuthData();
        redirectToLogin();
    } else {
        storeUserData(userData);
        checkSessionExpiry();
    }
}

// –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
function storeUserData(userData) {
    localStorage.setItem('username', userData.username);
    localStorage.setItem('email', userData.email);
    localStorage.setItem('role', userData.role);
    localStorage.setItem('last_active', new Date().toISOString());
}

function redirectToLogin() {
    if (!window.location.pathname.includes('/login.html')) {
        console.log('üî¥ –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞...');
        window.location.href = '/login.html';
    }
}

function checkSessionExpiry() {
    const lastActive = localStorage.getItem('last_active');
    if (lastActive) {
        const inactiveTime = (new Date() - new Date(lastActive)) / (1000 * 60); // –≤ –º–∏–Ω—É—Ç–∞—Ö
        if (inactiveTime > 30) {
            console.warn('‚è≥ –°–µ—Å—Å–∏—è –∏—Å—Ç–µ–∫–ª–∞ –∏–∑-–∑–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏');
            clearAuthData();
            redirectToLogin();
        }
    }
}

console.log("Auth.js version: 1.0." + Date.now());