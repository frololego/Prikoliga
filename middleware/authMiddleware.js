// middleware/authMiddleware.js
const jwt = require('jsonwebtoken');

const revokedTokens = new Set(); // –•—Ä–∞–Ω–∏–ª–∏—â–µ –æ—Ç–æ–∑–≤–∞–Ω–Ω—ã—Ö —Ç–æ–∫–µ–Ω–æ–≤

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
function authenticateToken(req, res, next) {
    const authHeader = req.headers.authorization;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –∏ —Ñ–æ—Ä–º–∞—Ç
    if (!authHeader || !authHeader.startsWith('Bearer ')) {
        return res.status(401).json({ error: '‚ùå –¢–æ–∫–µ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –Ω–µ–≤–µ—Ä–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞' });
    }

    const token = authHeader.split(' ')[1];

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –æ—Ç–æ–∑–≤–∞–Ω –ª–∏ —Ç–æ–∫–µ–Ω
    if (revokedTokens.has(token)) {
        return res.status(403).json({ error: '‚ùå –¢–æ–∫–µ–Ω –æ—Ç–æ–∑–≤–∞–Ω' });
    }

    try {
        const decoded = jwt.verify(token, process.env.JWT_SECRET || 'supersecretkey123');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
        if (!decoded || !decoded.id || !decoded.username) {
            return res.status(403).json({ error: '‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–æ–∫–µ–Ω–µ' });
        }

        console.log("üîì –î–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω:", decoded);
        req.user = decoded;
        next();
    } catch (e) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Ç–æ–∫–µ–Ω–∞:", e.message);
        return res.status(403).json({ error: '‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω' });
    }
}

// Middleware –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ email
function requireVerified(req, res, next) {
    if (!req.user || !req.user.is_verified) {
        return res.status(403).json({ error: '‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ email' });
    }
    next();
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∑—ã–≤–∞ —Ç–æ–∫–µ–Ω–æ–≤
function revokeToken(token) {
    if (token) {
        revokedTokens.add(token);
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏
module.exports = {
    authenticateToken,
    requireVerified,
    revokeToken
};
